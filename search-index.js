var searchIndex = new Map(JSON.parse('[["axaddrspace",{"t":"FPKGTTKFIFIIIPFFFTTTTONNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCNNNNNOONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNOONNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNOOOGRPKKPFFPFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNN","n":["AddrSpace","Alloc","AxMmHal","Backend","DEVICE","EXECUTE","GuestMemoryAccessor","GuestPhysAddr","GuestPhysAddrRange","GuestVirtAddr","GuestVirtAddrRange","HostPhysAddr","HostVirtAddr","Linear","MappingFlags","NestedPageFaultInfo","PhysFrame","READ","UNCACHED","USER","WRITE","access_flags","add","","add_assign","","all","alloc","alloc_frame","alloc_zero","as_mut_ptr","as_usize","","base","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","borrow_mut","","","","","","","clear","clone","","","","clone_into","","","","clone_to_uninit","","","","cmp","","complement","contains","contains_range","dealloc_frame","default","","device","difference","drop","","empty","end","","","eq","","","extend","fault_guest_paddr","fill","fmt","","","","","","","","","","","","","","from","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_usize","","handle_page_fault","insert","intersection","intersects","into","","","","","","","into_iter","is_all","is_empty","iter","iter_names","map","map_alloc","map_linear","new_alloc","new_empty","new_linear","not","page_table","page_table_root","partial_cmp","","phys_to_virt","protect","read_buffer","","read_obj","","read_volatile","","remove","set","size","start","","start_paddr","sub","","","","","sub_assign","","","symmetric_difference","to_owned","","","","toggle","translate","translate_and_get_limit","","translated_byte_buffer","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","uninit","union","unmap","","virt_to_phys","write_buffer","","write_obj","","write_volatile","","_phantom","pa_va_offset","populate","AccessWidth","Addr","Byte","DeviceAddr","DeviceAddrRange","Dword","Port","PortRange","Qword","SysRegAddr","SysRegAddrRange","Word","addr","bits_range","borrow","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","contains","","","end","","eq","","","","","fmt","","","","","","","","","","","from","","","","","into","","","","","new","","","","number","partial_cmp","","","size","start","","to_owned","","","","","try_from","","","","","","try_into","","","","","type_id","","","",""],"q":[[0,"axaddrspace"],[214,"axaddrspace::Backend"],[217,"axaddrspace::device"],[322,"page_table_entry"],[323,"axaddrspace::addr"],[324,"axaddrspace::frame"],[325,"axerrno"],[326,"axaddrspace::hal"],[327,"core::option"],[328,"axaddrspace::address_space"],[329,"page_table_multiarch"],[330,"axaddrspace::address_space::backend"],[331,"core::cmp"],[332,"core::iter::traits::collect"],[333,"core::fmt"],[334,"core::result"],[335,"x86_64::structures::paging::page_table"],[336,"bitflags::iter"],[337,"page_table_multiarch::bits64"],[338,"memory_addr::addr"],[339,"axaddrspace::memory_accessor"],[340,"core::marker"],[341,"alloc::vec"],[342,"core::any"],[343,"core::ops::range"],[344,"axaddrspace::device::device_addr"]],"i":"`Bb``d0```````1```0000bfj103AbAf1132An6666666667043256704325067436743674343660143`60260BhBj8658748888826665554788926655478888886528888926547888889229298226539Dh000009932159776697699:76930339:376589:376589:3765859:34000000EdEh1`FhEl``0``0``0Ej1F`Fb3Fd321403214032140321403403521212140322114000333214032140321030403421214032144032140321403","f":"`````````````````````{bd}{{fh}f}{{jh}j}{{{n{lf}}h}A`}{{{n{lj}}h}A`}{{}d}{{}{{Ad{{Ab{c}}}}}Af}{{}{{Aj{Ah}}}}1{{{n{{Ab{c}}}}}AlAf}{fh}{jh}{{{n{{An{c}}}}}jB`}{{dd}d}{{{n{ld}}d}A`}10{{{n{d}}}h}021{n{{n{c}}}{}}000000{{{n{l}}}{{n{lc}}}{}}000000{{{n{l{An{c}}}}}A`B`}{{{n{d}}}d}{{{n{{Bb{c}}}}}{{Bb{c}}}B`}{{{n{f}}}f}{{{n{j}}}j}{{n{n{lc}}}A`{}}000{{nAl}A`}000{{{n{f}}{n{f}}}Bd}{{{n{j}}{n{j}}}Bd}{dd}{{{n{d}}d}Bf}{{{n{{An{c}}}}jh}BfB`}{AhA`}{{}f}{{}j}`{{dd}d}?{{{n{l{Ab{c}}}}}A`Af}{{}d}{{{n{{An{c}}}}}jB`}{Bhf}{Bjj}{{{n{d}}{n{d}}}Bf}{{{n{f}}{n{f}}}Bf}{{{n{j}}{n{j}}}Bf}{{{n{ld}}c}A`{{Bn{}{{Bl{d}}}}}}{bj}{{{n{l{Ab{c}}}}Al}A`Af}{{{n{d}}{n{lC`}}}{{Cd{A`Cb}}}}0000{{{n{{An{c}}}}{n{lC`}}}CfB`}{{{n{f}}{n{lC`}}}Cf}00{{{n{j}}{n{lC`}}}Cf}00{{{n{{Ab{c}}}}{n{lC`}}}Cf{ChAf}}{{{n{b}}{n{lC`}}}Cf}{cc{}}{Cjd}11{hf}2{hj}333{h{{Aj{d}}}}{hd}00{cd{{Bn{}{{Bl{d}}}}}}{{{n{Cl}}}{{Aj{d}}}}54{{{n{l{An{c}}}}jd}BfB`}{{{n{ld}}d}A`}{{dd}d}{{{n{d}}d}Bf}{{}c{}}000000{d}{{{n{d}}}Bf}0{{{n{d}}}{{Cn{d}}}}{{{n{d}}}{{D`{d}}}}{{{n{{Bb{c}}}}jhd{n{l{Db{``c}}}}}BfB`}{{{n{l{An{c}}}}jhdBf}AdB`}{{{n{l{An{c}}}}jDdhd}AdB`}{Bf{{Bb{c}}}B`}{{jh}{{Ad{{An{c}}}}}B`}{h{{Bb{c}}}B`}{dd}{{{n{{An{c}}}}}{{n{{Db{``c}}}}}B`}{{{n{{An{c}}}}}DdB`}{{{n{f}}{n{f}}}{{Aj{Bd}}}}{{{n{j}}{n{j}}}{{Aj{Bd}}}}{AhDf};{{{n{Dh}}j{n{l{Dj{Al}}}}}{{Ad{A`}}}}0{{{n{Dh}}j}{{Ad{c}}}Dl}000{{{n{ld}}d}A`}{{{n{ld}}dBf}A`}{{{n{{An{c}}}}}hB`}{Bhf}{Bjj}{{{n{{Ab{c}}}}}AhAf}{{dd}d}{{fh}f}{{ff}h}{{jj}h}{{jh}j}:{{{n{lf}}h}A`}{{{n{lj}}h}A`}6{nc{}}000={{{n{{An{c}}}}j}{{Aj{Dd}}}B`}{{{n{Dh}}j}{{Aj{{Dn{Ddh}}}}}}{{{n{{An{c}}}}j}{{Aj{{Dn{Ddh}}}}}B`}{{{n{{An{c}}}}jh}{{Aj{{E`{{n{l{Dj{Al}}}}}}}}}B`}{c{{Cd{e}}}{}{}}000000{{}{{Cd{c}}}{}}000000{nEb}000000{{}{{Ab{c}}}Af}?{{{n{{Bb{c}}}}jh{n{l{Db{``c}}}}}BfB`}{{{n{l{An{c}}}}jh}AdB`}{DfAh}{{{n{Dh}}j{n{{Dj{Al}}}}}{{Ad{A`}}}}0{{{n{Dh}}jc}{{Ad{A`}}}Dl}000{EdEf}{Ehh}{EdBf}````````````{{{n{Ej}}}h}{{{n{El}}}{{En{h}}}}{n{{n{c}}}{}}0000{{{n{l}}}{{n{lc}}}{}}0000{{{n{F`}}}F`}{{{n{Fb}}}Fb}{{{n{El}}}El}{{{n{Fd}}}Fd}{{{n{Ej}}}Ej}{{n{n{lc}}}A`{}}0000{{nAl}A`}0000{{{n{El}}{n{El}}}Bd}{{{n{Fd}}{n{Fd}}}Bd}{{{n{Ej}}{n{Ej}}}Bd}{{{n{{Fh{}{{Ff{c}}}}}}c}BfFj}{{{n{F`}}c}Bf{}}{{{n{Fb}}c}Bf{}}{F`Ej}{FbFd}{{{n{F`}}{n{F`}}}Bf}{{{n{Fb}}{n{Fb}}}Bf}{{{n{El}}{n{El}}}Bf}{{{n{Fd}}{n{Fd}}}Bf}{{{n{Ej}}{n{Ej}}}Bf}{{{n{F`}}{n{lC`}}}Cf}0{{{n{Fb}}{n{lC`}}}Cf}0{{{n{El}}{n{lC`}}}Cf}{{{n{Fd}}{n{lC`}}}Cf}00{{{n{Ej}}{n{lC`}}}Cf}00{cc{}}0000{{}c{}}0000{{EjEj}F`}{{FdFd}Fb}{FlFd}{hEj}{{{n{Fd}}}Fl}{{{n{El}}{n{El}}}{{Aj{Bd}}}}{{{n{Fd}}{n{Fd}}}{{Aj{Bd}}}}{{{n{Ej}}{n{Ej}}}{{Aj{Bd}}}}{{{n{El}}}h}{F`Ej}{FbFd}{nc{}}0000{c{{Cd{e}}}{}{}}0{h{{Cd{Elc}}}{}}111{{}{{Cd{c}}}{}}0000{nEb}0000","D":"ACl","p":[[5,"NestedPageFaultInfo",0],[5,"MappingFlags",0,322],[5,"GuestVirtAddr",0,323],[1,"usize"],[5,"GuestPhysAddr",0,323],[0,"mut"],[1,"reference",null,null,1],[1,"unit"],[5,"PhysFrame",0,324],[8,"AxResult",325],[10,"AxMmHal",0,326],[8,"HostPhysAddr",0,323],[6,"Option",327,null,1],[1,"u8"],[5,"AddrSpace",0,328],[10,"PagingHandler",329],[6,"Backend",0,330],[6,"Ordering",331],[1,"bool"],[8,"GuestVirtAddrRange",0,323],[8,"GuestPhysAddrRange",0,323],[17,"Item"],[10,"IntoIterator",332],[5,"Formatter",333],[5,"Error",333],[6,"Result",334,null,1],[8,"Result",333],[10,"Debug",333],[5,"PageTableFlags",335],[1,"str"],[5,"Iter",336],[5,"IterNames",336],[5,"PageTable64",337],[5,"PhysAddr",338],[8,"HostVirtAddr",0,323],[10,"GuestMemoryAccessor",0,339],[1,"slice"],[10,"Copy",340],[1,"tuple",null,null,1],[5,"Vec",341],[5,"TypeId",342],[15,"Alloc",214],[5,"PhantomData",340],[15,"Linear",214],[5,"SysRegAddr",217],[6,"AccessWidth",217],[5,"Range",343],[5,"SysRegAddrRange",217,344],[5,"PortRange",217,344],[5,"Port",217],[17,"Addr"],[10,"DeviceAddrRange",217,344],[10,"DeviceAddr",217,344],[1,"u16"]],"r":[[0,328],[1,330],[2,326],[3,330],[4,322],[5,322],[6,339],[7,323],[8,323],[9,323],[10,323],[11,323],[12,323],[13,330],[14,322],[16,324],[17,322],[18,322],[19,322],[20,322],[22,323],[23,323],[24,323],[25,323],[26,322],[27,324],[28,326],[29,324],[30,324],[31,323],[32,323],[33,328],[34,322],[35,322],[36,322],[37,322],[38,322],[39,322],[40,322],[41,322],[42,322],[43,330],[44,328],[45,323],[46,323],[47,324],[49,322],[50,330],[51,328],[52,323],[53,323],[54,324],[56,328],[57,322],[58,330],[59,323],[60,323],[61,322],[62,330],[63,323],[64,323],[65,322],[66,330],[67,323],[68,323],[69,323],[70,323],[71,322],[72,322],[73,328],[74,326],[75,323],[76,323],[78,322],[79,328],[80,324],[81,322],[82,328],[83,323],[84,323],[85,322],[86,323],[87,323],[88,322],[90,324],[91,322],[92,322],[93,322],[94,322],[95,322],[96,328],[97,323],[98,323],[99,323],[100,323],[101,323],[102,323],[103,324],[105,322],[106,322],[107,330],[108,328],[109,323],[110,323],[111,323],[112,323],[113,324],[115,322],[116,322],[117,322],[118,322],[119,322],[120,322],[121,323],[122,323],[123,328],[124,322],[125,322],[126,322],[127,322],[128,330],[129,328],[130,323],[131,323],[132,324],[134,322],[135,322],[136,322],[137,322],[138,322],[139,330],[140,328],[141,328],[142,330],[143,328],[144,330],[145,322],[146,328],[147,328],[148,323],[149,323],[150,326],[151,330],[152,339],[153,339],[154,339],[155,339],[156,339],[157,339],[158,322],[159,322],[160,328],[161,323],[162,323],[163,324],[164,322],[165,323],[166,323],[167,323],[168,323],[169,322],[170,323],[171,323],[172,322],[173,322],[174,330],[175,323],[176,323],[177,322],[178,328],[179,339],[180,328],[181,328],[182,322],[183,330],[184,328],[185,323],[186,323],[187,324],[189,322],[190,330],[191,328],[192,323],[193,323],[194,324],[196,322],[197,330],[198,328],[199,323],[200,323],[201,324],[203,324],[204,322],[205,330],[206,328],[207,326],[208,339],[209,339],[210,339],[211,339],[212,339],[213,339],[218,344],[220,344],[221,344],[224,344],[227,344],[231,344],[232,344],[236,344],[237,344],[241,344],[242,344],[246,344],[247,344],[251,344],[252,344],[259,344],[260,344],[261,344],[262,344],[263,344],[264,344],[265,344],[269,344],[270,344],[271,344],[272,344],[280,344],[281,344],[285,344],[286,344],[290,344],[291,344],[299,344],[300,344],[301,344],[302,344],[306,344],[307,344],[312,344],[313,344],[317,344],[318,344]],"b":[[38,"impl-Flags-for-MappingFlags"],[39,"impl-MappingFlags"],[91,"impl-Binary-for-MappingFlags"],[92,"impl-UpperHex-for-MappingFlags"],[93,"impl-LowerHex-for-MappingFlags"],[94,"impl-Octal-for-MappingFlags"],[95,"impl-Debug-for-MappingFlags"],[97,"impl-LowerHex-for-GuestVirtAddr"],[98,"impl-UpperHex-for-GuestVirtAddr"],[99,"impl-Debug-for-GuestVirtAddr"],[100,"impl-Debug-for-GuestPhysAddr"],[101,"impl-UpperHex-for-GuestPhysAddr"],[102,"impl-LowerHex-for-GuestPhysAddr"],[116,"impl-Flags-for-MappingFlags"],[117,"impl-MappingFlags"],[165,"impl-Sub%3Cusize%3E-for-GuestVirtAddr"],[166,"impl-Sub-for-GuestVirtAddr"],[167,"impl-Sub-for-GuestPhysAddr"],[168,"impl-Sub%3Cusize%3E-for-GuestPhysAddr"],[269,"impl-Debug-for-SysRegAddrRange"],[270,"impl-LowerHex-for-SysRegAddrRange"],[271,"impl-Debug-for-PortRange"],[272,"impl-LowerHex-for-PortRange"],[274,"impl-LowerHex-for-Port"],[275,"impl-UpperHex-for-Port"],[276,"impl-Debug-for-Port"],[277,"impl-UpperHex-for-SysRegAddr"],[278,"impl-LowerHex-for-SysRegAddr"],[279,"impl-Debug-for-SysRegAddr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKQAGgAXAAMAJwAAACsADQA6AA0ATAABAFAAAQBWAAIAXAANAGsAAABuAAAAcAAAAHUAAACHAAAAjAAAAJUAAQCYAAAApgADAKsAAQCuAAMAtwAUAM4AAADoABsABQEBAAkBDwAoAQIALgEUAA==","P":[[27,"H"],[28,""],[29,"H"],[31,""],[33,"H"],[34,""],[42,"T"],[56,"H"],[57,""],[58,"H"],[59,""],[61,"T"],[65,""],[73,"H"],[74,""],[79,"H"],[81,""],[82,"H"],[83,""],[88,"T"],[89,""],[90,"H"],[91,""],[96,"H"],[97,""],[103,"H"],[104,""],[105,"T"],[106,""],[107,"T"],[109,""],[110,"T"],[111,""],[112,"T"],[115,""],[119,"T"],[120,""],[123,"H"],[124,""],[127,"U"],[134,""],[139,"H"],[145,""],[146,"H"],[148,""],[151,"H"],[152,""],[154,"V"],[158,""],[160,"H"],[161,""],[163,"H"],[164,""],[173,"T"],[177,""],[178,"H"],[179,""],[180,"H"],[182,"U,T"],[189,"U"],[196,""],[203,"H"],[204,""],[205,"H"],[207,""],[210,"V"],[214,""],[231,"T"],[241,""],[246,"T"],[251,""],[259,"DeviceAddrRange::Addr"],[262,""],[280,"T"],[285,"U"],[290,""],[301,"T"],[306,"U,T"],[308,"TryFrom::Error"],[309,"U,T"],[312,"U"],[317,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[11767]}